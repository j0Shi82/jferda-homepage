@use 'variables.scss' as variables;
@use '@material/linear-progress/mixins' as linear-progress-mixins;

.jdev-skills-progress-cat {
  .mdc-linear-progress__bar.mdc-linear-progress__primary-bar {
    transition-property: transform;
    transition-delay: 0s;
    transition-duration: var(--jdev-skills-progress-duration, 1s);
    transition-timing-function: ease-in-out;
  }

  &.no-animation {
    .mdc-linear-progress__bar.mdc-linear-progress__primary-bar {
      transition-duration: 0s;
    }
  }

  .jdev-skills-progress-logo,
  .jdev-skills-row-logo {
    width: 100%;
    height: variables.$skill-progress-height;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
  }

  .jdev-skills-progress-subcat-content:has(.jdev-skills-progress-logo) {
    .jdev-skills-row-logo {
      height: calc(variables.$skill-progress-height / 2);
    }
  }

  .jdev-skills-progress-subcat-header {
    display: flex;
    justify-content: center;
    align-items: center;

    > .smui-paper__content {
      width: 100%;
      padding-top: 100%;
      background-size: contain;
      background-position: center;
      background-repeat: no-repeat;
    }
  }

  .jdev-skills-progress-align {
    display: flex;
    align-items: center;
  }

  .jdev-skills-upcoming {
    opacity: 0.3;
  }

  .jdev-skills-upcoming-icon {
    position: absolute;
    height: 48px;
    right: 0;
  }

  .jdev-skills-progress {
    height: calc(variables.$skill-progress-height / 2);

    @each $tech in variables.$tech-list {
      &.#{$tech} {
        @include linear-progress-mixins.bar-color(map-get(variables.$tech-colors, #{$tech}-primary));
      }
    }
  }
}
